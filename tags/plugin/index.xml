<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Plugin on わいがかいた</title>
    <link>https://pyonk.github.io/blog/tags/plugin/</link>
    <description>Recent content in Plugin on わいがかいた</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 27 Mar 2019 08:48:12 +0900</lastBuildDate>
    
	<atom:link href="https://pyonk.github.io/blog/tags/plugin/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>vista.vim is awesome</title>
      <link>https://pyonk.github.io/blog/posts/vista-vim-is-awesome/</link>
      <pubDate>Wed, 27 Mar 2019 08:48:12 +0900</pubDate>
      
      <guid>https://pyonk.github.io/blog/posts/vista-vim-is-awesome/</guid>
      <description>この前coc.nvimを見つけたけど またredditにてvista.vimというのを見つけた。
 vista.vim: A tagbar alternative that supports LSP symbols and async processing : vim  /r/vimのRSS登録しとってよかった。
vista.vim vimをIDEのようにしてくれる夢のようなツール。
cocと連携してLSPのシンボルから出してくれるから、別途ctagsとか使わなくていい感じ（ctagsとの連携もできるみたい）。 fzfを使ってシンボルの絞り込み検索もできるので、楽しい感じ。
あたらしいプラグインのようで、まだ発展途上のようだ(2019-03)。
 ⚠️ Currently vista.vim is mostly usable, yet not stable. All the public APIs and global options can be changed or even be removed in the future.
― liuchengxu/vista.vim: View and search LSP symbols, tags in Vim
 とりあえずインストール 例のごとく僕はdeinを使っているので
[[plugins]] repo = &#39;liuchengxu/vista.vim&#39; depends = [&#39;coc.</description>
    </item>
    
    <item>
      <title>coc.nvim is awesome</title>
      <link>https://pyonk.github.io/blog/posts/how-to-use-coc-vim/</link>
      <pubDate>Thu, 21 Mar 2019 09:33:38 +0900</pubDate>
      
      <guid>https://pyonk.github.io/blog/posts/how-to-use-coc-vim/</guid>
      <description>相変わらず飽きずにいろんなエディタに浮気しまくっているけど最近はvimが楽しい。
この間redditみてたら
 python completion in coc.nvim + pyls : vim  こんなスレッドがあって
coc.nvimて見慣れないプラグインがあるなあと思ってみてみたら わかりやすそうだし、MPLSもバッチリつかえるっぽいから使ってみた。
インストール方法 僕はプラグインマネジャーにdeinを使ってるので
[[plugins]] repo = &#39;neoclide/coc.nvim&#39; build = &#39;coc#util#install()&#39; hook_add = &#39;&#39;&#39; nmap &amp;lt;silent&amp;gt; gd &amp;lt;Plug&amp;gt;(coc-definition) nmap &amp;lt;silent&amp;gt; gy &amp;lt;Plug&amp;gt;(coc-type-definition) nmap &amp;lt;silent&amp;gt; gi &amp;lt;Plug&amp;gt;(coc-implementation) nmap &amp;lt;silent&amp;gt; gr &amp;lt;Plug&amp;gt;(coc-references) &amp;quot; Remap for rename current word nmap &amp;lt;leader&amp;gt;rn &amp;lt;Plug&amp;gt;(coc-rename) &amp;quot; Highlight symbol under cursor on CursorHold autocmd CursorHold * silent call CocActionAsync(&#39;highlight&#39;) &amp;quot; Use K for show documentation in preview window nnoremap &amp;lt;silent&amp;gt; K :call &amp;lt;SID&amp;gt;show_documentation()&amp;lt;CR&amp;gt; function!</description>
    </item>
    
  </channel>
</rss>