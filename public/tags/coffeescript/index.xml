<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Coffeescript on pyonk Blog</title>
    <link>https://pyonk.github.io/blog/tags/coffeescript/</link>
    <description>Recent content in Coffeescript on pyonk Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 17 Oct 2016 10:38:19 +0900</lastBuildDate>
    <atom:link href="https://pyonk.github.io/blog/tags/coffeescript/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>hubot-line-message-apiをつくってみてます</title>
      <link>https://pyonk.github.io/blog/post/hubot-line-message-api/</link>
      <pubDate>Mon, 17 Oct 2016 10:38:19 +0900</pubDate>
      
      <guid>https://pyonk.github.io/blog/post/hubot-line-message-api/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://github.com/pyonk/hubot-line-message-api&#34;&gt;ここです。&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;使い方:485f19e5141a5c321e525d086b19ad4d&#34;&gt;使い方&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;$ git clone https://github.com/pyonk/hubot-line-message-api.git&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;からの&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json:package.json&#34;&gt;&amp;quot;dependencies&amp;quot;: {
    &amp;quot;bar&amp;quot;: &amp;quot;file:./hubot-line-message-api&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;からの&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ hubot -a line-message-api&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;でいけると思います。&lt;/p&gt;

&lt;h1 id=&#34;hubot-line-message-api:485f19e5141a5c321e525d086b19ad4d&#34;&gt;hubot-line-message-api&lt;/h1&gt;

&lt;p&gt;結構ガバガバ実装なので&lt;a href=&#34;https://devdocs.line.me/ja/&#34;&gt;API Reference&lt;/a&gt;をしっかり読んでからやるのをオススメします。&lt;/p&gt;

&lt;h2 id=&#34;設定:485f19e5141a5c321e525d086b19ad4d&#34;&gt;設定&lt;/h2&gt;

&lt;h3 id=&#34;必須:485f19e5141a5c321e525d086b19ad4d&#34;&gt;必須&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;LINE_CHANNEL_ACCESS_TOKEN

&lt;ul&gt;
&lt;li&gt;lineアカウントのBasic Infomationにある&lt;code&gt;Channel Access Token&lt;/code&gt;の値を設定してください。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;任意:485f19e5141a5c321e525d086b19ad4d&#34;&gt;任意&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;HUBOT_ENDPOINT

&lt;ul&gt;
&lt;li&gt;defaultで/hubot/incomingになってます。&lt;/li&gt;
&lt;li&gt;自由に設定していただいて大丈夫です。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;FIXIE_URL

&lt;ul&gt;
&lt;li&gt;herokuで走らす場合は必須かなと思います。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://elements.heroku.com/addons/fixie&#34;&gt;Fixie&lt;/a&gt;というアドオンを使います。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ heroku addons:create fixie:tricycle&lt;/code&gt;を叩くと自動で設定されています。&lt;/li&gt;
&lt;li&gt;出力されるIPアドレスを&lt;code&gt;Server IP Whitelist&lt;/code&gt;に設定してあげてください。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;できること:485f19e5141a5c321e525d086b19ad4d&#34;&gt;できること&lt;/h2&gt;

&lt;p&gt;まだreplyメッセージのみの対応です。そのうちpushメッセージも手をつけようと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;返信&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;テキスト &lt;a href=&#34;https://devdocs.line.me/ja/#text&#34;&gt;https://devdocs.line.me/ja/#text&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;res.reply
    type: &#39;text&#39;
    content: &#39;nyaa&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;画像 &lt;a href=&#34;https://devdocs.line.me/ja/#image&#34;&gt;https://devdocs.line.me/ja/#image&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;画像はhttpsでないとline側で弾かれます。&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;res.reply
    type:&#39;image&#39;
    content:
        original: &#39;https://example.com/images/image.jpg&#39;
        preview: &#39;https://example.com/images/image.jpg&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ボタン &lt;a href=&#34;https://devdocs.line.me/ja/#buttons&#34;&gt;https://devdocs.line.me/ja/#buttons&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;res.reply
    type: &#39;buttons&#39;
    content:
        image: &#39;https://example.com/images/image.jpg&#39;
        title: &#39;this is Buttons&#39;
        text: &#39;buttons description&#39;
        actions: [
            type: &#39;uri&#39;
            label: &#39;Open in Browser&#39;
            uri: &#39;http://example.com/&#39;
        ]
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;カルーセル &lt;a href=&#34;https://devdocs.line.me/ja/#carousel&#34;&gt;https://devdocs.line.me/ja/#carousel&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;content.length &amp;lt;= 5&lt;/code&gt;である必要があります。&lt;code&gt;&amp;gt; 5&lt;/code&gt;の場合line側で怒られます。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;type: &#39;postback&#39;&lt;/code&gt;に関してはまだ試してないのでわかりません。そのうちやります。&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;res.reply
    type: &#39;carousel&#39;
    content:[
        image: &#39;https://example.com/images/image.jpg&#39;
        title: &#39;this is Buttons&#39;
        text: &#39;buttons description&#39;
        actions:[
            type: &#39;uri&#39;
            label: &#39;Open in Browser&#39;
            uri: &#39;http://example.com/&#39;
        ],
        image: &#39;https://example.com/images/image.jpg&#39;
        title: &#39;this is Buttons&#39;
        text: &#39;buttons description&#39;
        actions:[
            type: &#39;uri&#39;
            label: &#39;Open in Browser&#39;
            uri: &#39;http://example.com/&#39;
        ]...
    ]
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;所感:485f19e5141a5c321e525d086b19ad4d&#34;&gt;所感&lt;/h1&gt;

&lt;p&gt;hubotつかって新しくlinebot作ろうと思ってたらBOT API TrialからよりリッチなMessaging APIが発表されたらしいので、hubotのアダプター作っちゃえってなって作ってみた。&lt;br&gt;
タイトルにもある通り、まだ&lt;strong&gt;作ってみている&lt;/strong&gt;最中なのでちゃんとnpmにあげられるくらいちゃんと作ってみたい。&lt;br&gt;
とりあえず、最低限はできているような気もするので、公開してみる。&lt;br&gt;&lt;br&gt;
初めてcoffeescriptちゃんと触ったし、hubotのアダプターも初めて作るので探り探りすぎて疲れた^q^&lt;br&gt;&lt;br&gt;
けどたのしい。&lt;br&gt;&lt;br&gt;&lt;br&gt;
後から気づいたけど&lt;code&gt;message-api&lt;/code&gt;でなくて&lt;code&gt;messaging-api&lt;/code&gt;だったね。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>